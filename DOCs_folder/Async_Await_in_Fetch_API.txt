Cómo usar Async/Await en Fetch API?

Ya vimos como podemos hacer peticiones Fetch a una API normalmente utilizando
la sintaxis de promesas, que suele ser un poco engorrosa. Pero gracias a
Async/await podemos evitar el encadenamiento de .then() y escribir un código
más legible.

Para poder utilizar la sintaxis Async/await lo primero que debemos hacer es
determinar que la función será de caracter asincronica, eso lo hacemos agregando
la palabra reservada "async" a nuestra función. Una vez que hayamos hecho esto podemos
utilizar "await" para informar que se deberá aguardar la resolución de la promesa
antes de que el navegador continue iterando.


const App = () => {

   const [posts, setPosts] = useState([]);

   // GET with fetch API with asyn/await
   useEffect(() => {
      const fetchPost = async () => {
         const response = await fetch(
            'https://jsonplaceholder.typicode.com/posts?_limit=10'
         );
         const data = await response.json();
         console.log(data);
         setPosts(data);
      };
      fetchPost();
   }, []);
}